"use strict"
define("test-apollo-bug/app",["exports","test-apollo-bug/resolver","ember-load-initializers","test-apollo-bug/config/environment"],function(e,t,n,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var a=Ember.Application.extend({modulePrefix:r.default.modulePrefix,podModulePrefix:r.default.podModulePrefix,Resolver:t.default});(0,n.default)(a,r.default.modulePrefix)
var i=a
e.default=i}),define("test-apollo-bug/controllers/application",["exports","@babel/runtime/helpers/esm/toConsumableArray","@babel/runtime/helpers/esm/slicedToArray","@babel/runtime/helpers/esm/classCallCheck","@babel/runtime/helpers/esm/possibleConstructorReturn","@babel/runtime/helpers/esm/getPrototypeOf","@babel/runtime/helpers/esm/inherits","@babel/runtime/helpers/esm/assertThisInitialized","@babel/runtime/helpers/esm/decorate","@babel/runtime/helpers/esm/taggedTemplateLiteral","@ember-decorators/service","ember-concurrency-decorators","rxjs","rxjs/operators","ember-rx","graphql-tag"],function(e,t,n,r,a,i,l,o,u,s,d,c,f,p,m,b){function v(){var e=(0,s.default)(["\n  mutation CreatePost($content: String!) {\n    post: createPost(content: $content) {\n      id\n      content\n    }\n  }\n"])
return v=function(){return e},e}function y(){var e=(0,s.default)(["\n  query FetchAllPosts {\n    allPosts {\n      id\n      content\n    }\n  }\n"])
return y=function(){return e},e}function g(e){var t=new f.Subject
return e.subscribe(t),t}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(0,b.default)(y()),P=(0,b.default)(v()),k=(0,u.default)(null,function(e,u){return{F:function(t){function n(){var t,l;(0,r.default)(this,n)
for(var u=arguments.length,s=new Array(u),d=0;d<u;d++)s[d]=arguments[d]
return l=(0,a.default)(this,(t=(0,i.default)(n)).call.apply(t,[this].concat(s))),e((0,o.default)((0,o.default)(l))),l}return(0,l.default)(n,t),n}(u),d:[{kind:"field",decorators:[d.inject],key:"apollo",value:void 0},{kind:"field",decorators:[(0,c.lastValue)("fetchModel")],key:"model$",value:function(){return(0,f.empty)()}},{kind:"field",decorators:[(0,m.subscribe)("model$")],key:"model",value:function(){return[]}},{kind:"field",key:"createdPosts",value:function(){return[]}},{kind:"field",decorators:[c.task],key:"fetchModel",value:function(){return regeneratorRuntime.mark(function e(){var t,r,a,i,l,o,u
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.apollo.client.watchQuery({query:h}),(r=g(t)).subscribe(function(e){console.log(e)}),a=(0,m.firstToPromise)(r),i=(0,n.default)(a,2),l=i[0],o=i[1],e.next=6,l
case 6:return u=e.sent,e.abrupt("return",(0,f.concat)((0,f.of)(u),o).pipe((0,p.map)(function(e){return e.data.allPosts})))
case 8:case"end":return e.stop()}},e,this)})}},{kind:"field",decorators:[c.task],key:"createPost",value:function(){return regeneratorRuntime.mark(function e(){var n,r
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.apollo.mutate({mutation:P,variables:{content:"A new post"}},"post")
case 2:n=e.sent,this.set("createdPosts",[].concat((0,t.default)(this.createdPosts),[n])),(r=this.apollo.cache.readQuery({query:h})).allPosts=[].concat((0,t.default)(r.allPosts),[n]),this.apollo.cache.writeQuery({query:h,data:r})
case 7:case"end":return e.stop()}},e,this)})}}]}},Ember.Controller)
e.default=k}),define("test-apollo-bug/graphql/schema",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Post"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"content"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"allPosts"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Post"}}}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"createPost"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"content"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Post"}},directives:[]}]}],loc:{start:0,end:136}}
e.default=t}),define("test-apollo-bug/helpers/app-version",["exports","test-apollo-bug/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n){function r(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=t.default.APP.version,i=r.versionOnly||r.hideSha,l=r.shaOnly||r.hideVersion,o=null
return i&&(r.showExtended&&(o=a.match(n.versionExtendedRegExp)),o||(o=a.match(n.versionRegExp))),l&&(o=a.match(n.shaRegExp)),o?o[0]:a}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=r,e.default=void 0
var a=Ember.Helper.helper(r)
e.default=a}),define("test-apollo-bug/helpers/cancel-all",["exports","ember-concurrency/helpers/cancel-all"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/helpers/perform",["exports","ember-concurrency/helpers/perform"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n}),define("test-apollo-bug/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n}),define("test-apollo-bug/helpers/subscribe",["exports","ember-rx/helpers/subscribe"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"subscribe",{enumerable:!0,get:function(){return t.subscribe}})}),define("test-apollo-bug/helpers/task",["exports","ember-concurrency/helpers/task"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","test-apollo-bug/config/environment"],function(e,t,n){var r,a
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n.default.APP&&(r=n.default.APP.name,a=n.default.APP.version)
var i={name:"App Version",initialize:(0,t.default)(r,a)}
e.default=i}),define("test-apollo-bug/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}
e.default=n}),define("test-apollo-bug/initializers/ember-concurrency",["exports","ember-concurrency/initializers/ember-concurrency"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"ember-data",initialize:t.default}
e.default=r}),define("test-apollo-bug/initializers/export-application-global",["exports","test-apollo-bug/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var r,a=t.default.exportApplicationGlobal
r="string"==typeof a?a:Ember.String.classify(t.default.modulePrefix),n[r]||(n[r]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[r]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default=void 0
var r={name:"export-application-global",initialize:n}
e.default=r}),define("test-apollo-bug/initializers/run-pretender",["exports","@babel/runtime/helpers/esm/asyncToGenerator","pretender","graphql-tools","graphql","test-apollo-bug/graphql/schema"],function(e,t,n,r,a,i){function l(e){var l=(0,r.makeExecutableSchema)({typeDefs:i.default});(0,r.addMockFunctionsToSchema)({schema:l})
var o=new n.default(function(){this.post("/api/graphql",function(){var e=(0,t.default)(regeneratorRuntime.mark(function e(t){var n,r
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=JSON.parse(t.requestBody),e.next=3,(0,a.graphql)(l,n.query,{},{},n.variables)
case 3:return r=e.sent,e.abrupt("return",[200,{"Content-Type":"application/json"},JSON.stringify(r)])
case 5:case"end":return e.stop()}},e,this)}))
return function(t){return e.apply(this,arguments)}}())})
e.register("server:pretender",o)}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=l,e.default=void 0
var o={initialize:l}
e.default=o}),define("test-apollo-bug/instance-initializers/ember-data",["exports","ember-data/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"ember-data",initialize:t.default}
e.default=n}),define("test-apollo-bug/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n}),define("test-apollo-bug/router",["exports","test-apollo-bug/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
n.map(function(){})
var r=n
e.default=r}),define("test-apollo-bug/routes/application",["exports","@babel/runtime/helpers/esm/classCallCheck","@babel/runtime/helpers/esm/createClass","@babel/runtime/helpers/esm/possibleConstructorReturn","@babel/runtime/helpers/esm/getPrototypeOf","@babel/runtime/helpers/esm/inherits"],function(e,t,n,r,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var l=function(e){function l(){return(0,t.default)(this,l),(0,r.default)(this,(0,a.default)(l).apply(this,arguments))}return(0,i.default)(l,e),(0,n.default)(l,[{key:"setupController",value:function(e){e.fetchModel.perform()}}]),l}(Ember.Route)
e.default=l}),define("test-apollo-bug/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/services/apollo",["exports","ember-apollo-client/services/apollo"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("test-apollo-bug/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Yi/ezcOc",block:'{"symbols":["post","post"],"statements":[[7,"div"],[11,"id","panel"],[9],[0,"\\n  "],[7,"button"],[9],[0,"\\n    Create New Post\\n  "],[3,"action",[[22,0,[]],[27,"perform",[[23,["createPost"]]],null]]],[10],[0,"\\n\\n  Created "],[1,[23,["createPost","performCount"]],false],[0," additional posts\\n"],[10],[0,"\\n\\n"],[7,"div"],[11,"id","columns"],[9],[0,"\\n  "],[7,"div"],[11,"class","column"],[9],[0,"\\n    "],[7,"h1"],[9],[0,"Posts from "],[7,"code"],[9],[0,"watchQuery"],[10],[10],[0,"\\n\\n"],[4,"each",[[23,["model"]]],null,{"statements":[[0,"      "],[7,"h2"],[9],[1,[22,2,["id"]],false],[10],[0,"\\n      \\n      "],[1,[22,2,["content"]],false],[0,"\\n"]],"parameters":[2]},null],[0,"  "],[10],[0,"\\n  "],[7,"div"],[11,"class","column"],[9],[0,"\\n    "],[7,"h1"],[9],[0,"Posts created locally"],[10],[0,"\\n\\n"],[4,"each",[[23,["createdPosts"]]],null,{"statements":[[0,"      "],[7,"h2"],[9],[1,[22,1,["id"]],false],[10],[0,"\\n      \\n      "],[1,[22,1,["content"]],false],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[10],[0,"\\n"],[10]],"hasEval":false}',meta:{moduleName:"test-apollo-bug/templates/application.hbs"}})
e.default=t}),define("test-apollo-bug/config/environment",[],function(){try{var e="test-apollo-bug/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(unescape(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(r){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("test-apollo-bug/app").default.create({name:"test-apollo-bug",version:"0.0.0+970809c6"})
